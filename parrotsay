#!/usr/bin/env python

import sys

parrot_ascii = """
         \                  .ccccc.
          \             .cc;'coooxkl;.
           \         .:c:::c:,;,,,;c;;,.'.
            \      .clc,',:,..:xxocc;...c;
                  .c:,';:ox:..:c,,,,,,...cd,
                .c:'.,oxxxxl::l:.;loll;..;ol.
                ;Oc..:xxxxxxxxx:.,llll,....oc
             .,;,',:loxxxxxxxxx:.,llll;.,;.'ld,
            .lo;..:xxxxxxxxxxxx:.'cllc,.:l:'cO;
           .:;...'cxxxxxxxxxxxxol;,::,..cdl;;l'
         .cl;':;'';oxxxxxxxxxxxxx:....,cooc,cO;
     .,,,::;,lxoc:,,:lxxxxxxxxxxxo:,,;lxxl;'oNc
   .cdxo;':lxxxxxxc'';cccccoxxxxxxxxxxxxo,.;lc.
  .loc'.'lxxxxxxxxocc;''''';ccoxxxxxxxxx:..oc
occ'..',:cccccccccccc:;;;;;;;;:ccccccccc,.'c,
Ol;......................................;l'`,
"""

def single_line(say):
    top_line = " " + "_" * (len(say) + 2)
    middle_line = "< " + say + " >"
    bottom_line = " " + "-" * (len(say) + 2)
    print top_line
    print middle_line
    print bottom_line

def multi_line(say):
    top_line = " " + "_" * 42
    bottom_line = " " + "-" * 42
    lines = get_lines(say)

    print top_line

    print "/ " + lines[0] + " \\"
    for line in lines[1:len(lines)-1]:
        print "| " + line + " |"
    print "\ " + lines[-1] + " /"
    print bottom_line


def get_lines(long_string):
    words = long_string.split()
    lines = []
    line = ""
    for word in words:
        word_length = len(word)
        if((len(line) + word_length) > 39):
            lines.append(line.ljust(40))
            line = ""
        line = line + " " + word
    lines.append(line.ljust(40))
    return lines


def print_bubble(say):
    if(len(say) > 40):
        multi_line(say)
    else:
        single_line(say)

def main():
    if(len(sys.argv) > 1):
        print_bubble(" ".join(sys.argv[1:]))
    print parrot_ascii


if __name__ == '__main__':
    main()
